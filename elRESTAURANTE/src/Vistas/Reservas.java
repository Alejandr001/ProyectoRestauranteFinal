/*
 int idReserva;
    int idMesa;
    String nombre;
    int dni;
    LocalDate fecha;
    Time hora;
    boolean estado;
 */
package Vistas;


import AccesoData.MesaData;

import AccesoData.ReservaData;
import Entidades.Mesa;


import Entidades.Reserva;
import java.awt.Color;

import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.sql.Statement;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.RadioButton;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;

public class Reservas extends javax.swing.JPanel {
    List<Mesa> listaDeMesas = new ArrayList<>();
    DefaultTableModel modelo = new DefaultTableModel();
    ReservaData rs = new ReservaData();
 private List<Reserva> listaUno;
 private MesaData meData;
 
 
  
    /**
     * Creates new form Reservas
     */
    public Reservas() {
        initComponents();
        armarCabecera();
        meData = new MesaData();
        
        listaUno=rs.listarReservas();
        cargarDatos(listaUno);
        llenarMesasDisponibles();
        ButtonGroup grupoRadioButtons = new ButtonGroup();
        JRadioButton jRadioBuVIGENTE = new JRadioButton("Vigente");
        JRadioButton jRadioBuNoVigente = new JRadioButton("No Vigente");
        grupoRadioButtons.add(jRadioBuVIGENTE);
        grupoRadioButtons.add(jRadioBuNoVigente);
    }

    private void llenarMesasDisponibles() {

        MesaData modeloMesas = new MesaData();
        ArrayList<Mesa> listaMesa = modeloMesas.llenarcombo();

        jCBoxMESASdisponibles.removeAllItems();

        for (int i = 0; i < listaMesa.size(); i++) {

            jCBoxMESASdisponibles.addItem(listaMesa.get(i));

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextDni = new javax.swing.JTextField();
        jTextFieldHORA = new javax.swing.JTextField();
        jTextNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLELIMINAR = new javax.swing.JLabel();
        jLBUSCAR1 = new javax.swing.JLabel();
        jLAGREGAR = new javax.swing.JLabel();
        jLMODIFICAR = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCBoxMESASdisponibles = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jRadioBuVIGENTE = new javax.swing.JRadioButton();
        jRadioBuNoVigente = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jDateChooserFECHA = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReservas = new javax.swing.JTable();
        jTextHora = new javax.swing.JLabel();
        jPBACKfondo = new javax.swing.JPanel();
        jLabelfondo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 102, 102));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextDni.setBackground(new java.awt.Color(243, 241, 244));
        jTextDni.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextDni.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextDni.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dni", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        add(jTextDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, 240, -1));

        jTextFieldHORA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextFieldHORA.setText("12:00");
        add(jTextFieldHORA, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 250, 80, -1));

        jTextNombre.setBackground(new java.awt.Color(243, 241, 244));
        jTextNombre.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextNombre.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nombre", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jTextNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNombreActionPerformed(evt);
            }
        });
        add(jTextNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 240, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Hora de Reserva");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, 120, 30));

        jLELIMINAR.setBackground(new java.awt.Color(204, 204, 204));
        jLELIMINAR.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLELIMINAR.setForeground(new java.awt.Color(51, 51, 51));
        jLELIMINAR.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLELIMINAR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Icono/trash_can_rubish_paper_bin_icon_231400.png"))); // NOI18N
        jLELIMINAR.setText("Eliminar");
        jLELIMINAR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLELIMINAR.setOpaque(true);
        jLELIMINAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLELIMINARMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLELIMINARMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLELIMINARMouseExited(evt);
            }
        });
        add(jLELIMINAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 290, 130, 70));

        jLBUSCAR1.setBackground(new java.awt.Color(204, 204, 204));
        jLBUSCAR1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLBUSCAR1.setForeground(new java.awt.Color(51, 51, 51));
        jLBUSCAR1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLBUSCAR1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Icono/search_magnifying_glass_icon_192631 (1).png"))); // NOI18N
        jLBUSCAR1.setText("Buscar");
        jLBUSCAR1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLBUSCAR1.setOpaque(true);
        jLBUSCAR1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBUSCAR1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBUSCAR1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBUSCAR1MouseExited(evt);
            }
        });
        add(jLBUSCAR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 50, 130, 70));

        jLAGREGAR.setBackground(new java.awt.Color(204, 204, 204));
        jLAGREGAR.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLAGREGAR.setForeground(new java.awt.Color(51, 51, 51));
        jLAGREGAR.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLAGREGAR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Icono/plus_add_new_icon_231379 (1).png"))); // NOI18N
        jLAGREGAR.setText("Agregar");
        jLAGREGAR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLAGREGAR.setOpaque(true);
        jLAGREGAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLAGREGARMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLAGREGARMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLAGREGARMouseExited(evt);
            }
        });
        add(jLAGREGAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 130, 130, 70));

        jLMODIFICAR.setBackground(new java.awt.Color(204, 204, 204));
        jLMODIFICAR.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLMODIFICAR.setForeground(new java.awt.Color(51, 51, 51));
        jLMODIFICAR.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLMODIFICAR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Icono/pen_pencil_write_edit_icon_231369.png"))); // NOI18N
        jLMODIFICAR.setText("Modificar");
        jLMODIFICAR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLMODIFICAR.setOpaque(true);
        jLMODIFICAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLMODIFICARMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLMODIFICARMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLMODIFICARMouseExited(evt);
            }
        });
        add(jLMODIFICAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 210, 130, 70));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Reservas");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 120, 20));

        jCBoxMESASdisponibles.setBackground(new java.awt.Color(243, 241, 244));
        jCBoxMESASdisponibles.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jCBoxMESASdisponibles.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jCBoxMESASdisponibles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxMESASdisponiblesActionPerformed(evt);
            }
        });
        add(jCBoxMESASdisponibles, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, 230, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Fecha de Reserva");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 200, 120, 30));

        jRadioBuVIGENTE.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jRadioBuVIGENTE.setSelected(true);
        jRadioBuVIGENTE.setText("Activa");
        jRadioBuVIGENTE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jRadioBuVIGENTE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioBuVIGENTEActionPerformed(evt);
            }
        });
        add(jRadioBuVIGENTE, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 360, 70, -1));

        jRadioBuNoVigente.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jRadioBuNoVigente.setText("Cancelada");
        jRadioBuNoVigente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jRadioBuNoVigente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioBuNoVigenteActionPerformed(evt);
            }
        });
        add(jRadioBuNoVigente, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 360, 100, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Reservaciones");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 120, 20));
        add(jDateChooserFECHA, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 200, -1, -1));

        jTableReservas.setBackground(new java.awt.Color(243, 241, 244));
        jTableReservas.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jTableReservas.setForeground(new java.awt.Color(102, 102, 102));
        jTableReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jTableReservas.setGridColor(new java.awt.Color(255, 204, 204));
        jTableReservas.setSelectionBackground(new java.awt.Color(51, 51, 51));
        jTableReservas.setSelectionForeground(new java.awt.Color(102, 255, 255));
        jScrollPane1.setViewportView(jTableReservas);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 350, 360));

        jTextHora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/cuaderno-abierto-vacio_23-2147978156.jpg"))); // NOI18N
        jTextHora.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.white));
        add(jTextHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 10, 750, 410));

        jPBACKfondo.setBackground(new java.awt.Color(204, 204, 204));
        jPBACKfondo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPBACKfondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelfondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/comidarap.png"))); // NOI18N
        jLabelfondo.setText("jLabel1");
        jPBACKfondo.add(jLabelfondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, -4, 1000, 430));

        add(jPBACKfondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 430));
    }// </editor-fold>//GEN-END:initComponents

    private void jLELIMINARMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLELIMINARMouseEntered
jLELIMINAR.setForeground(Color.yellow);    }//GEN-LAST:event_jLELIMINARMouseEntered

    private void jLELIMINARMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLELIMINARMouseExited
       jLELIMINAR.setForeground(Color.DARK_GRAY); // TODO add your handling code here:
    }//GEN-LAST:event_jLELIMINARMouseExited

    private void jLELIMINARMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLELIMINARMouseClicked

     String idInput = JOptionPane.showInputDialog(this, "Ingrese el ID de la reserva a cancelar: ");
    if (idInput != null && !idInput.isEmpty()) {
        try {
            int idReserva = Integer.parseInt(idInput);
            boolean reservaCancelada = rs.eliminarReserva(idReserva);
            if (reservaCancelada) {
                JOptionPane.showMessageDialog(this, "Reserva cancelada con éxito.");
                 cargarDatos(listaUno);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró la reserva para cancelar.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID de reserva no válido. Ingrese un número válido.");
        }
    }
    }//GEN-LAST:event_jLELIMINARMouseClicked

    private void jLBUSCAR1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBUSCAR1MouseClicked
       String idInput = JOptionPane.showInputDialog(this, "Ingrese el ID de la reserva a buscar: ");

    if (idInput != null && !idInput.isEmpty()) {
        try {
            int idReserva = Integer.parseInt(idInput);
            Reserva reservaEncontrada = rs.buscarReserva(idReserva);
            if (reservaEncontrada != null) {
                String mensaje = "Reserva Encontrada:\n";
                mensaje += "ID de Reserva: " + reservaEncontrada.getIdReserva() + "\n";
                mensaje += "ID de Mesa: " + reservaEncontrada.getIdMesa() + "\n";
                mensaje += "Nombre: " + reservaEncontrada.getNombre() + "\n";
      
                mensaje +="DNI: " + reservaEncontrada.getDni() + "\n";
                  mensaje += "Fecha: " + reservaEncontrada.getFecha() + "\n";
                mensaje += "Hora: " + reservaEncontrada.getHora() + "\n";
                mensaje += "Estado: " + (reservaEncontrada.isEstado() ? "Vigente" : "No Vigente");

                JOptionPane.showMessageDialog(this, mensaje, "Reserva Encontrada", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Reserva no encontrada por ID: " + idReserva);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID de reserva no válido. Ingrese un número válido.");
        

} catch (SQLException ex) {
            Logger.getLogger(Reservas.class
.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    
    }//GEN-LAST:event_jLBUSCAR1MouseClicked

    private void jLBUSCAR1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBUSCAR1MouseEntered
jLBUSCAR1.setForeground(Color.yellow);    }//GEN-LAST:event_jLBUSCAR1MouseEntered

    private void jLBUSCAR1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBUSCAR1MouseExited
jLBUSCAR1.setForeground(Color.DARK_GRAY);    }//GEN-LAST:event_jLBUSCAR1MouseExited

    private void jLAGREGARMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLAGREGARMouseClicked

        try {
            String nombre = jTextNombre.getText();
            String dni = jTextDni.getText();
            int idMesa = ((Mesa) jCBoxMESASdisponibles.getSelectedItem()).getIdMesa();
            LocalDate fecha = jDateChooserFECHA.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            String horaString = jTextFieldHORA.getText();
            Time hora = Time.valueOf(horaString + ":00"); // Asumiendo que la hora está en formato HH:mm
            boolean estado = jRadioBuVIGENTE.isSelected();
            meData.ocuparMesa(idMesa);

            if (!nombre.isEmpty() && !dni.isEmpty() && !horaString.isEmpty()) {
                // Crear un objeto Reserva con los datos ingresados
                Reserva reserva = new Reserva(idMesa, nombre, Integer.parseInt(dni), fecha, hora, estado);
                List<Reserva> listaReservas = new ArrayList<>();
                //Insertar la reserva en la tabla de datos (aquí debes tener un método adecuado para hacer esto)
                listaReservas.add(reserva);
                cargarDatos(listaReservas);
                rs.guardarReserva(reserva);
                // Mostrar un mensaje de confirmación
                JOptionPane.showMessageDialog(this, "La reserva ha sido agregada con éxito.");
            } else {
                JOptionPane.showMessageDialog(this, "Uno o más campos están vacíos. La inserción ha sido cancelada.");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al agregar la reserva. Verifica los datos ingresados.");
        }


    }//GEN-LAST:event_jLAGREGARMouseClicked

    private void jLAGREGARMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLAGREGARMouseEntered
jLAGREGAR.setForeground(Color.yellow);    }//GEN-LAST:event_jLAGREGARMouseEntered

    private void jLAGREGARMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLAGREGARMouseExited
        // TODO add your handling code here:
        jLAGREGAR.setForeground(Color.DARK_GRAY);
                
    }//GEN-LAST:event_jLAGREGARMouseExited

    private void jLMODIFICARMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLMODIFICARMouseClicked
        // TODO add your handling code here:
     String idInput = JOptionPane.showInputDialog(this, "Ingrese el ID de la reserva a modificar: ");
if (idInput != null && !idInput.isEmpty()) {
    try {
        int idReserva = Integer.parseInt(idInput);
        
        Reserva reserva = rs.buscarReserva(idReserva);

        if (reserva != null) {
            // Obtener los nuevos datos de la reserva desde el formulario de edición
            String nuevoNombre = jTextNombre.getText();
            String nuevoDni = jTextDni.getText();
            String nuevaHoraString = jTextFieldHORA.getText();
            Time nuevaHora = Time.valueOf(nuevaHoraString + ":00");
           
            // Modificar los datos de la reserva
            reserva.setNombre(nuevoNombre);
            reserva.setDni(Integer.parseInt(nuevoDni));
            reserva.setHora(nuevaHora);

            // Luego, modifica la reserva usando el método modificarReserva
            rs.modificarReserva(reserva);

            JOptionPane.showMessageDialog(this, "Reserva modificada con éxito.");
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró la reserva para modificar.");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "ID de reserva no válido. Ingrese un número válido.");
    }    catch (SQLException ex) {
             Logger.getLogger(Reservas.class.getName()).log(Level.SEVERE, null, ex);
         }
}
    }//GEN-LAST:event_jLMODIFICARMouseClicked

    private void jLMODIFICARMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLMODIFICARMouseEntered
jLMODIFICAR.setForeground(Color.yellow);    }//GEN-LAST:event_jLMODIFICARMouseEntered

    private void jLMODIFICARMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLMODIFICARMouseExited
jLMODIFICAR.setForeground(Color.DARK_GRAY);    }//GEN-LAST:event_jLMODIFICARMouseExited

    private void jTextNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNombreActionPerformed

    private void jRadioBuNoVigenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioBuNoVigenteActionPerformed
       
        if (jRadioBuNoVigente.isSelected()) {
       
        jRadioBuVIGENTE.setEnabled(false);
    } else {
       
        jRadioBuVIGENTE.setEnabled(true);
    }

    }//GEN-LAST:event_jRadioBuNoVigenteActionPerformed

    private void jCBoxMESASdisponiblesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxMESASdisponiblesActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jCBoxMESASdisponiblesActionPerformed

    private void jRadioBuVIGENTEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioBuVIGENTEActionPerformed
       
        if (jRadioBuVIGENTE.isSelected()) {
        
        jRadioBuNoVigente.setEnabled(false);
    } else {
        
        jRadioBuNoVigente.setEnabled(true);
    }

              //  JOptionPane.showMessageDialog(null, "Reserva marcada como Vigente");
           
        
    }//GEN-LAST:event_jRadioBuVIGENTEActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Mesa> jCBoxMESASdisponibles;
    private com.toedter.calendar.JDateChooser jDateChooserFECHA;
    private javax.swing.JLabel jLAGREGAR;
    private javax.swing.JLabel jLBUSCAR1;
    private javax.swing.JLabel jLELIMINAR;
    private javax.swing.JLabel jLMODIFICAR;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelfondo;
    private javax.swing.JPanel jPBACKfondo;
    private javax.swing.JRadioButton jRadioBuNoVigente;
    private javax.swing.JRadioButton jRadioBuVIGENTE;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableReservas;
    private javax.swing.JTextField jTextDni;
    private javax.swing.JTextField jTextFieldHORA;
    private javax.swing.JLabel jTextHora;
    private javax.swing.JTextField jTextNombre;
    // End of variables declaration//GEN-END:variables
 private void armarCabecera() {

        modelo.addColumn("idReserva");
        modelo.addColumn("Nombre");
        modelo.addColumn("Mesa");
        modelo.addColumn("Hora");
        modelo.addColumn("fecha");
       
        jTableReservas.setModel(modelo);

    }
// private void cargarDatos(List<Reserva> reservas) {
//    modelo.setRowCount(0);
//    for (Reserva reserva : reservas) {
//        modelo.addRow(new Object[] {reserva.getIdReserva(), reserva.getNombre(), reserva.getIdMesa(), reserva.getHora(),reserva.getFecha()});
//    }
//    setVisible(true);
//            jTableReservas.setModel(modelo);

private void cargarDatos(List<Reserva> reservas) {
    
    for (Reserva reserva : reservas) {
        Object[] rowData = new Object[5];
        rowData[0] = reserva.getIdReserva(); // Guardar idReserva en la primera columna (oculta)
        rowData[1] = reserva.getNombre();
        rowData[2] = reserva.getIdMesa();
        rowData[3] = reserva.getHora();
        rowData[4] = reserva.getFecha();
        modelo.addRow(rowData);
    }
    
    jTableReservas.setModel(modelo);
    jTableReservas.getColumnModel().getColumn(0).setMinWidth(0); // Establecer ancho mínimo para la primera columna (oculta)
    jTableReservas.getColumnModel().getColumn(0).setMaxWidth(0); // Establecer ancho máximo para la primera columna (oculta)
    jTableReservas.getColumnModel().getColumn(0).setWidth(0); // Ocultar la primera columna
    setVisible(true);
}
  
}

    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
